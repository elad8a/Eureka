



set(REMOTEUI_PROTO_FILES_LIST "proto/eureka.proto" "proto/helloworld.proto")
set(REMOTEUI_AUTOGENERATED_DIR "${EUREKA_AUTOGENERATED_DIRECTORY}/rpc")

add_library(Eureka.RemoteProto ${REMOTEUI_PROTO_FILES_LIST}) 

###################################################################
# https://tradias.github.io/asio-grpc/md_doc_cmake_protobuf_generate.html
asio_grpc_protobuf_generate(
    PROTOS ${REMOTEUI_PROTO_FILES_LIST} 
    OUT_DIR ${REMOTEUI_AUTOGENERATED_DIR}
    TARGET Eureka.RemoteProto
    USAGE_REQUIREMENT PRIVATE
    GENERATE_GRPC
    #[OUT_DIR <output_directory>]
    #[OUT_VAR <output_variable>]
    #[TARGET <target>]
    #[USAGE_REQUIREMENT PRIVATE|PUBLIC|INTERFACE]
    #[IMPORT_DIRS <directories>...]
    #[EXTRA_ARGS <arguments>...]
    #[GENERATE_GRPC]
    #[GENERATE_DESCRIPTORS]
    #[GENERATE_MOCK_CODE]
)  

###################################################################
 
set_no_warnings_compiler_flags(Eureka.RemoteProto)   

file(GLOB_RECURSE REMOTEUI_AUTOGENERATED_FILES "${REMOTEUI_AUTOGENERATED_DIR}/*")
 
if (MSVC)
    set_source_files_properties(
      ${REMOTEUI_AUTOGENERATED_FILES}
      PROPERTIES
      COMPILE_FLAGS "/W1"
    )
 else()
 endif()

#message("ZZZ AUTOGENERATED_FILES = ${REMOTEUI_AUTOGENERATED_FILES}")
#foreach (val ${REMOTEUI_AUTOGENERATED_DIR})
#    message("ZZZ val = ${val}")
#endforeach()
#source_group(autogenerated FILES ${REMOTEUI_AUTOGENERATED_FILES})

target_include_directories(
    Eureka.RemoteProto
    PUBLIC
    ${REMOTEUI_AUTOGENERATED_DIR}
)

 target_link_libraries(
     Eureka.RemoteProto 
     PUBLIC
	 gRPC::gpr gRPC::grpc gRPC::grpc++ gRPC::grpc++_alts     
 )
